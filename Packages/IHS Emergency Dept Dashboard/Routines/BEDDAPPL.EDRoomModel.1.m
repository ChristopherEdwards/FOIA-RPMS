 ;BEDDAPPL.EDRoomModel.1
 ;(C)InterSystems, generated for class BEDDAPPL.EDRoomModel.  Do NOT edit. 10/29/2015 07:58:20AM
 ;;3936692B;BEDDAPPL.EDRoomModel
 ;
%CopyDataFromModel(pData,pTypes,pSeries="") public {
 // Generated by %ZEN.DataModel.ObjectDataModel
 Set tSC = 1
 For sno = $S(pSeries="":1,1:pSeries):1:..%seriesCount {
 Set pData(sno,"RoomNo") = ..RoomNoLogicalToDisplay(..RoomNo)
 Set pData(sno,"Status") = ..StatusLogicalToDisplay(..Status)
 Set pData(sno,"Occupied") = ..OccupiedLogicalToDisplay(..Occupied)
 Quit:pSeries'=""
 }
 If ('tSC) Quit tSC
 Merge pData = ..%data
 Quit tSC }
%CopyDataToModel(pData,pSeries="") public {
 // Generated by %ZEN.DataModel.ObjectDataModel
 Set tSC = 1
 For sno = $S(pSeries="":1,1:pSeries):1:..%seriesCount {
 Set ..RoomNo = ..RoomNoDisplayToLogical($G(pData(sno,"RoomNo")))
 Kill pData(sno,"RoomNo")
 Set ..Status = ..StatusDisplayToLogical($G(pData(sno,"Status")))
 Kill pData(sno,"Status")
 Set ..Occupied = ..OccupiedDisplayToLogical($G(pData(sno,"Occupied")))
 Kill pData(sno,"Occupied")
 Quit:pSeries'=""
 }
 If ('tSC) Quit tSC
 Kill ..%data
 Merge ..%data = pData
 Quit tSC }
%GetPropertyInfo(pInfo,pExtended=0,pModelId="",pContainer="") public {
 // Generated by %ZEN.DataModel.ObjectDataModel
 Set tSC = 1
 Set pInfo("RoomNo") = $I(pInfo)
 Set pInfo("Status") = $I(pInfo)
 Set pInfo("Occupied") = $I(pInfo)
 If (pExtended) {
  Set tProp = "RoomNo"
  Set pInfo(tProp,"%type") = "text"
  Set pInfo(tProp,"size") = 30
  Set pInfo(tProp,"maxlength") = 50
  Set tProp = "Status"
  Set pInfo(tProp,"%type") = "text"
  Set pInfo(tProp,"size") = 30
  Set pInfo(tProp,"maxlength") = 50
  Set tProp = "Occupied"
  Set pInfo(tProp,"%type") = "text"
  Set pInfo(tProp,"size") = 30
  Set pInfo(tProp,"maxlength") = 50
 }
 Quit tSC }
%GetPropertyList(pModelId="",pContainer="") public {
	Quit "RoomNo,Status,Occupied" }
%NormalizeObject() public {
	If '$system.CLS.GetModified() Quit 1
	If m%%id Set:i%%id'="" i%%id=(..%idNormalize(i%%id))
	If m%%seriesCount Set:i%%seriesCount'="" i%%seriesCount=(..%seriesCountNormalize(i%%seriesCount))
	If m%Occupied Set:i%Occupied'="" i%Occupied=(..OccupiedNormalize(i%Occupied))
	If m%RoomNo Set:i%RoomNo'="" i%RoomNo=(..RoomNoNormalize(i%RoomNo))
	If m%Status Set:i%Status'="" i%Status=(..StatusNormalize(i%Status))
	Quit 1 }
%OnDeleteSource(pID) public {
  Quit ##class(BEDD.EDRooms).%DeleteId(pID)
}
%OnLoadModel(pSource) public {
    Set ..RoomNo = pSource.RoomNo
    Set ..Status = pSource.Status
    Set ..Occupied = pSource.Occupied
    Quit 1 }
%OnNewSource(pSC) public { Set:'($data(pSC)#2) pSC=1
  Quit ##class(BEDD.EDRooms).%New()
}
%OnOpenSource(pID,pConcurrency=-1,pSC) public { Set:'($data(pSC)#2) pSC=1
  Quit ##class(BEDD.EDRooms).%OpenId(pID)
}
%OnSaveSource(pSource) public {
   Set tSC = pSource.%Save()
   Set ..%id = pSource.%Id()
   Quit tSC }
%OnStoreModel(pSource) public {
    Set pSource.RoomNo = ..RoomNo
    Set pSource.Status = ..Status
    Set pSource.Occupied = ..Occupied
    Quit pSource.%Save() }
%ValidateObject(force=0) public {
	Set sc=1
	If '$system.CLS.GetModified() Quit sc
	If m%%id Set iv=..%id If iv'="" Set rc=(..%idIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"%id",iv)
	If m%%seriesCount Set iv=..%seriesCount If iv'="" Set rc=(..%seriesCountIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"%seriesCount",iv)
	If m%Occupied Set iv=..Occupied If iv'="" Set rc=(..OccupiedIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Occupied",iv)
	If m%RoomNo Set iv=..RoomNo If iv'="" Set rc=(..RoomNoIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"RoomNo",iv)
	If m%Status Set iv=..Status If iv'="" Set rc=(..StatusIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Status",iv)
	Quit sc }
